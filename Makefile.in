# General info
SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
datarootdir = @datarootdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR        =
GOSH           = "@GOSH@"
GAUCHE_CONFIG  = "@GAUCHE_CONFIG@"
GAUCHE_PACKAGE = "@GAUCHE_PACKAGE@"
INSTALL        = "@GAUCHE_INSTALL@" -C

# Other parameters
SOEXT  = @SOEXT@
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@
LOCAL_PATHS = "@LOCAL_PATHS@"

# Module-specific stuff
PACKAGE   = Gauche-libuv

ARCHFILES = control--libuv.$(SOEXT)
SCMFILES  = control/libuv.sci
HEADERS   =

TARGET    = $(ARCHFILES)
GENERATED = $(SCMFILES) control--libuv.c
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   configure.lineno autom4te*.cache $(PACKAGE).gpd

GAUCHE_PKGINCDIR  = "$(DESTDIR)@GAUCHE_PKGINCDIR@"
GAUCHE_PKGLIBDIR  = "$(DESTDIR)@GAUCHE_PKGLIBDIR@"
GAUCHE_PKGARCHDIR = "$(DESTDIR)@GAUCHE_PKGARCHDIR@"

all : $(TARGET)

control--libuv.$(SOEXT): control--libuv.c libuv/libuv.a libuv/libuv.$(SOEXT)
	$(GAUCHE_PACKAGE) compile \
	  --local=$(LOCAL_PATHS) --cflags="-I libuv/include" --libs="-lm -ldl -lrt" --output control--libuv.$(SOEXT) --verbose libuv control--libuv.c `$(GOSH) ./extract-objs.scm`

control--libuv.c control/libuv.sci: libuv.scm
	$(GOSH) precomp --dso-name control--libuv.$(SOEXT) --output control--libuv.c --interface control/libuv.sci libuv.scm

libuv/libuv.a:
	cd libuv; make

libuv/libuv.$(SOEXT):
	cd libuv; make libuv.$(SOEXT)

check : all
	@rm -f test.log
	$(GOSH) -I. -I$(srcdir) $(srcdir)/test.scm > test.log

install : all
	$(INSTALL) -m 444 -T $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR) $(SCMFILES)
	$(INSTALL) -m 555 -T $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

uninstall :
	$(INSTALL) -U $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR) $(SCMFILES)
	$(INSTALL) -U $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

clean :
	(cd libuv; $(MAKE) clean)
	rm -rf core $(TARGET) $(GENERATED) *.o *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) configure VERSION

